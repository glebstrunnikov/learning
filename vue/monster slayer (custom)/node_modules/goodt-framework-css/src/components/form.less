/* control (input, select, textarea, checkbox, radio, switch) */
@form-elem-border-radius: @border-radius;
@form-elem-height: @unit*5;
@form-elem-line-height: @line-height;
@form-elem-padding: @spacer2 @spacer3;
@form-elem-background: @color-white;
@form-elem-placeholder-color: @color-grey;
@form-elem-color: @color-body;
@form-elem-font-size: @font-size;
@form-elem-border-size: 1px;
@form-elem-border-color: @color-grey-light;

@form-elem-disabled-color: @color-disabled-dark;
@form-elem-disabled-background: @color-disabled;
@form-elem-disabled-secondary-background: @color-disabled-dark;

@form-elem-focus-border-color: @color-grey;

@form-elem-invalid-color: @color-red;
@form-elem-invalid-border-color: @color-red;
@form-elem-invalid-placeholder-color: @color-red;
@form-elem-invalid-focus-border-color: @color-red-dark;
@form-elem-invalid-focus: @color-red-focus;

@form-elem-valid-color: @color-green;
@form-elem-valid-border-color: @color-green;
@form-elem-valid-placeholder-color: @color-green;
@form-elem-valid-focus-border-color: @color-green-dark;
@form-elem-valid-focus: @color-green-focus;

@form-elem-small-height: @unit*4;
@form-elem-small-font-size: @font-size-smaller;

@form-elem-large-height: @unit*7;
@form-elem-large-font-size: @font-size-larger;

@form-control-icon-width: @unit*5;

@form-label-font-size: @font-size;
@form-label-color: @color-grey-dark;
@form-label-margin: 0;
@form-label-xsmall-font-size: @font-size-xsmaller;
@form-label-small-font-size: @font-size-smaller;
@form-label-large-font-size: @font-size-larger;

@form-label-sticky-margin: 0 @spacer3;
@form-label-sticky-padding: 0 0;
@form-label-sticky-background: @color-white;

@form-label-float-margin: 0 @spacer3;
@form-label-float-padding: 0 0;
@form-label-float-background: @color-white;

@select-icon: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="2 2 20 20"><path fill="@{form-elem-placeholder-color}" d="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z" /></svg>';
@select-valid-icon: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="2 2 20 20"><path fill="@{form-elem-valid-color}" d="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z" /></svg>';
@select-invalid-icon: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="2 2 20 20"><path fill="@{form-elem-invalid-color}" d="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z" /></svg>';
@select-disabled-icon: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="2 2 20 20"><path fill="@{form-elem-disabled-secondary-background}" d="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z" /></svg>';

@checkbox-size: @unit*2.5;
@checkbox-small-size: @unit*2;
@checkbox-checked-background: @color-primary;
@checkbox-icon: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="-5 -5 34 34"><path fill="@{color-white}" d="M9,20.42L2.79,14.21L5.62,11.38L9,14.77L18.88,4.88L21.71,7.71L9,20.42Z" /></svg>';
@checkbox-indeterminate-icon: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="@{color-white}" d="M19,13H5V11H19V13Z" /></svg>';

@radio-size: @unit*2.5;
@radio-small-size: @unit*2;
@radio-checked-background: @color-primary;
@radio-icon: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="3 3 18 18"><path fill="@{color-white}" d="M12,8A4,4 0 0,0 8,12A4,4 0 0,0 12,16A4,4 0 0,0 16,12A4,4 0 0,0 12,8Z" /></svg>';

@switch-width: @unit*5;
@switch-height: @unit*2.5;
@switch-small-width: @unit*4;
@switch-small-height: @unit*2;
@switch-icon: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="@{form-elem-placeholder-color}" d="M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z" /></svg>';
@switch-valid-icon: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="@{form-elem-valid-color}" d="M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z" /></svg>';
@switch-invalid-icon: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="@{form-elem-invalid-color}" d="M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z" /></svg>';
@switch-checked-icon: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="@{color-white}" d="M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z" /></svg>';

.hook-form-control() {}
.hook-form-label() {}
.hook-form-label-float() {}
.hook-form-label-float-active() {}

.hook-form-elem() {}
.hook-form-elem-disabled() {}
.hook-form-elem-focus() {}
.hook-form-elem-hover() {}
.hook-form-elem-invalid() {}
.hook-form-elem-valid() {}

.hook-input() {}
.hook-input-disabled() {}
.hook-input-focus() {}
.hook-input-hover() {}
.hook-input-invalid() {}
.hook-input-valid() {}

.hook-select() {}
.hook-select-disabled() {}
.hook-select-focus() {}
.hook-select-hover() {}
.hook-select-invalid() {}
.hook-select-valid() {}

.hook-textarea() {}
.hook-textarea-disabled() {}
.hook-textarea-focus() {}
.hook-textarea-hover() {}
.hook-textarea-invalid() {}
.hook-textarea-valid() {}

.hook-switch() {}
.hook-switch-disabled() {}
.hook-switch-focus() {}
.hook-switch-hover() {}
.hook-switch-invalid() {}
.hook-switch-valid() {}

.hook-radio() {}
.hook-radio-disabled() {}
.hook-radio-focus() {}
.hook-radio-hover() {}
.hook-radio-invalid() {}
.hook-radio-valid() {}

.hook-checkbox() {}
.hook-checkbox-disabled() {}
.hook-checkbox-focus() {}
.hook-checkbox-hover() {}
.hook-checkbox-invalid() {}
.hook-checkbox-valid() {}

/*
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Control

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
*/

.form-control {
    position: relative;
    display: inline-block;
    > .input,
    > .select,
    > .textarea,
    > .form-elem {
        //display: block;
        width: 100%;
    }
    > .icon {
        position: absolute;
        z-index: 1;
        width: @form-control-icon-width;
        height: 100%;
        top: 0;
    }
    &-icon-left {
        > .icon {
            left: 0;
        }
        .input,
        .select,
        .textarea,
        .form-elem {
            padding-left: calc(@form-control-icon-width - @form-elem-border-size);
        }
    }
    &-icon-right {
        > .icon {
            right: 0;
        }
        .input,
        .select,
        .textarea,
        .form-elem {
            padding-right: calc(@form-control-icon-width - @form-elem-border-size);
        }
    }
    &-icon-both {
        > .icon {
            &:first-child {
                left: 0;
            }
            &:last-child {
                right: 0;
            }
        }
        .input,
        .select,
        .textarea,
        .form-elem {
            padding-left: calc(@form-control-icon-width - @form-elem-border-size);
            padding-right: calc(@form-control-icon-width - @form-elem-border-size);
        }
    }
    .hook-form-control();
}

/*
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

label

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
*/

.form-label {
    //font-size: @form-label-font-size;
    color: @form-label-color;
    margin: @form-label-margin;
    .hook-form-label();

    &-xsmall {
        font-size: @form-label-xsmall-font-size;
    }
    &-small {
        font-size: @form-label-small-font-size;
    }
    &-large {
        font-size: @form-label-large-font-size;
    }
    &-sticky {
        position: absolute;
        top: 0;
        line-height: 1;
        margin: @form-label-sticky-margin;
        padding: @form-label-sticky-padding;
        background: @form-label-sticky-background;
        transform: translateY(-50%);
    }
    &-float {
        position: absolute;
        top: 0;
        line-height: 1;
        margin: @form-label-float-margin;
        padding: @form-label-float-padding;
        background: @form-label-float-background;
        visibility: hidden;
        opacity: 0;
        transition: all 0.2s ease;
        cursor: default;

        // text-overflow for long labels
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        max-width: max-content;
        width: inherit;

        .hook-form-label-float();
    }
}
.input:not(:placeholder-shown),
.textarea:not(:placeholder-shown) {
    & + .form-label-float {
        opacity: 1;
        visibility: visible;
        transform: translateY(-50%);
        .hook-form-label-float-active();
    }
}

/*
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Shared

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
*/
.input,
.select,
.textarea,
.form-elem {
    position: relative;
    display: inline-block;
    vertical-align: middle;
    outline: none;
    color: @form-elem-color;
    font-size: @form-elem-font-size;
    border: @form-elem-border-size solid @form-elem-border-color;
    padding: @form-elem-padding;
    background-color: @form-elem-background;
    appearance: none;
    line-height: 1;
    border-radius: @form-elem-border-radius;
    transition: border-color 0.2s ease-out, background 0.2s ease-out, color 0.2s ease-out, box-shadow 0.2s ease-out;

    &::placeholder {
        color: @form-elem-placeholder-color;
    }
    &.focus,
    &:focus {
        &:not(.disabled):not([disabled]):not(:disabled) {
            .focus-state();
        }
        border-color: @form-elem-focus-border-color;
        outline: none;
    }
    &.invalid,
    &:invalid,
    &:required {
        color: @form-elem-invalid-color;
        border-color: @form-elem-invalid-border-color;
        box-shadow: none;
        &::placeholder {
            color: @form-elem-invalid-placeholder-color;
        }
        &.focus,
        &:focus {
            &:not(.disabled):not([disabled]):not(:disabled) {
                .focus-state(@form-elem-invalid-focus);
            }
            border-color: @form-elem-invalid-focus-border-color;
        }
    }
    &.valid {
        color: @form-elem-valid-color;
        border-color: @form-elem-valid-border-color;
        &::placeholder {
            color: @form-elem-valid-placeholder-color;
        }
        &.focus,
        &:focus {
            &:not(.disabled):not([disabled]):not(:disabled) {
                .focus-state(@form-elem-valid-focus);
            }
            border-color: @form-elem-valid-focus-border-color;
        }
    }
    &:disabled,
    &[disabled],
    &.disabled {
        color: @form-elem-disabled-color;
        background-color: @form-elem-disabled-background;
        pointer-events: none;
    }
}
// new + compatibility
input.checkbox,
input.radio,
input.switch,
:not(input).checkbox input,
:not(input).radio input,
:not(input).switch input {
    position: relative;
    display: inline-block;
    vertical-align: middle;
    outline: none;
    color: @form-elem-color;
    font-size: @form-elem-font-size;
    transition: border-color 0.2s ease-out, background 0.2s ease-out, color 0.2s ease-out, box-shadow 0.2s ease-out;
    appearance: none;
    border: @form-elem-border-size solid @form-elem-border-color;
    background: @form-elem-background scroll center center no-repeat;
    background-size: contain;
    border-radius: @form-elem-border-radius;

    &:checked {
        border-color: transparent;
        background-color: @color-primary;
    }
    &.focus,
    &:focus {
        outline: none;
        .focus-state();
    }
    &.invalid,
    &:invalid,
    &:required {
        border-color: @form-elem-invalid-border-color;
        &:checked {
            background-color: @form-elem-invalid-color;
        }
        &.focus,
        &:focus {
            .focus-state(@form-elem-invalid-focus);
        }
    }
    &.valid {
        border-color: @form-elem-valid-border-color;
        &:checked {
            background-color: @form-elem-valid-color;
        }
        &.focus,
        &:focus {
            .focus-state(@form-elem-valid-focus);
        }
    }
    &:disabled,
    &[disabled],
    &.disabled {
        pointer-events: none;
        border-color: @form-elem-border-color;
        background-color: @form-elem-disabled-background;
        &:checked {
            background-color: @form-elem-disabled-secondary-background;
        }
        &.focus,
        &:focus {
            .focus-state(none);
        }
    }
}
// compatibility
:not(input) {
    &.checkbox,
    &.radio,
    &.switch {
        position: relative;
        display: inline-block;
        vertical-align: middle;
        input {
            display: block;
        }
        i {
            display: none;
        }
    }
}
.input,
.select,
.form-elem {
    @p: calc((@form-elem-height - @form-elem-border-size*2 - @form-elem-line-height* @form-elem-font-size) / 2);
    line-height: @form-elem-line-height;
    padding-top: @p;
    padding-bottom: @p;
}
.form-elem-small {
    @p: calc((@form-elem-small-height - @form-elem-border-size*2 - @form-elem-line-height* @form-elem-small-font-size) / 2);
    line-height: @form-elem-line-height;
    padding-top: @p;
    padding-bottom: @p;
    font-size: @form-elem-small-font-size;
}
.form-elem-large {
    @p: calc((@form-elem-large-height - @form-elem-border-size*2 - @form-elem-line-height* @form-elem-large-font-size) / 2);
    line-height: @form-elem-line-height;
    padding-top: @p;
    padding-bottom: @p;
    font-size: @form-elem-large-font-size;
}

/*
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Form-elem

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
*/
.form-elem {
    &.focus,
    &:focus,
    &:focus-within {
        .hook-form-elem-focus();
    }
    &.hover,
    &:hover {
        .hook-form-elem-hover();
    }
    &.invalid,
    &:invalid {
        .hook-form-elem-invalid();
    }
    &.valid {
        .hook-form-elem-valid();
    }
    &:disabled,
    &[disabled],
    &.disabled {
        .hook-form-elem-disabled();
    }
    .hook-form-elem();
}

/*
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Input

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
*/
.input {
    /*
    &::-webkit-inner-spin-button,
    &::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }
    -moz-appearance: textfield;
    */
    //line-height: @form-elem-height - 2px;
    &.focus,
    &:focus {
        .hook-input-focus();
    }
    &.hover,
    &:hover {
        .hook-input-hover();
    }
    &.invalid,
    &:invalid {
        .hook-input-invalid();
    }
    &.valid {
        .hook-input-valid();
    }
    &:disabled,
    &[disabled],
    &.disabled {
        .hook-input-disabled();
    }
    .hook-input();
}
.input-small {
    .form-elem-small();
}
.input-large {
    .form-elem-large();
}

/*
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Select

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
*/
.select {
    background-image: .svg-image(@select-icon)[@return];
    background-position: center right 0.4rem;
    background-repeat: no-repeat;
    background-attachment: scroll;
    background-size: 1rem auto;
    padding-right+: 1.8rem;
    &.focus,
    &:focus {
        .hook-select-focus();
    }
    &.hover &:hover {
        .hook-select-hover;
    }
    &.invalid,
    &:invalid {
        background-image: .svg-image(@select-invalid-icon)[@return];
        .hook-select-invalid();
    }
    &.valid {
        background-image: .svg-image(@select-valid-icon)[@return];
        .hook-select-valid();
    }
    &:disabled,
    &[disabled],
    &.disabled {
        background-image: .svg-image(@select-disabled-icon)[@return];
        .hook-select-disabled();
    }
    .hook-select();
}
.select-small {
    .form-elem-small();
}
.select-large {
    .form-elem-large();
}

/*
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Textarea

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
*/
.textarea {
    line-height: 1.5em;
    resize: vertical;
    &.focus,
    &:focus {
        .hook-textarea-focus();
    }
    &.hover,
    &:hover {
        .hook-textarea-hover;
    }
    &.invalid,
    &:invalid {
        .hook-textarea-invalid();
    }
    &.valid {
        .hook-textarea-valid();
    }
    &:disabled,
    &[disabled],
    &.disabled {
        .hook-textarea-disabled();
    }
    .hook-textarea();
}
.textarea-small {
    font-size: @form-elem-small-font-size;
}
.textarea-large {
    font-size: @form-elem-large-font-size;
}

/*
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Switch

<input class="switch" type="checkbox">

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
*/
.switch() {
    width: @switch-width;
    height: @switch-height;
    background-image: .svg-image(@switch-icon)[@return];
    background-position: left center;
    .border-round();
    &:checked {
        background-image: .svg-image(@switch-checked-icon)[@return];
        background-position: right center;
    }
    &.focus,
    &:focus {
        .hook-switch-focus();
    }
    &.hover,
    &:hover {
        .hook-switch-hover();
    }
    &.invalid {
        &:not(:checked) {
            background-image: .svg-image(@switch-invalid-icon)[@return];
        }
        .hook-switch-invalid();
    }
    &.valid {
        &:not(:checked) {
            background-image: .svg-image(@switch-valid-icon)[@return];
        }
        .hook-switch-valid();
    }
    &:disabled,
    &[disabled],
    &.disabled {
        .hook-switch-disabled();
    }
    .hook-switch();
}
.switch-small() {
    width: @switch-small-width;
    height: @switch-small-height;
}
// new
input {
    &.switch {
        .switch;
    }
    &.switch-small {
        .switch-small;
    }
}
// compatibility
:not(input) {
    &.switch input {
        .switch;
    }
    &.switch-small input {
        .switch-small;
    }
}

/*
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Radio

<input class="radio" type="radio">

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
*/
.radio() {
    width: @radio-size;
    height: @radio-size;
    .border-round();
    &:checked {
        background-image: .svg-image(@radio-icon)[@return];
    }
    &.focus,
    &:focus {
        .hook-radio-focus();
    }
    &.hover,
    &:hover {
        .hook-radio-hover();
    }
    &.invalid {
        .hook-radio-invalid();
    }
    &.valid {
        .hook-radio-valid();
    }
    &:disabled,
    &[disabled],
    &.disabled {
        .hook-radio-disabled();
    }
    .hook-radio();
}
.radio-small() {
    width: @radio-small-size;
    height: @radio-small-size;
}
// new
input {
    &.radio {
        .radio;
    }
    &.radio-small {
        .radio-small;
    }
}
// compatibility
:not(input) {
    &.radio input {
        .radio;
    }
    &.radio-small input {
        .radio-small;
    }
}

/*
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Checkbox

<input class="checkbox" type="checkbox">

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
*/
.checkbox() {
    width: @checkbox-size;
    height: @checkbox-size;
    border-radius: @form-elem-border-radius;
    &:checked {
        background-image: .svg-image(@checkbox-icon)[@return];
    }
    &:indeterminate {
        border-color: transparent;
        background-color: @color-primary;
        background-image: .svg-image(@checkbox-indeterminate-icon)[@return];
    }
    &.focus,
    &:focus {
        .hook-checkbox-focus();
    }
    &.hover,
    &:hover {
        .hook-checkbox-hover();
    }
    &.invalid {
        .hook-checkbox-invalid();
    }
    &.valid {
        .hook-checkbox-valid();
    }
    &:disabled,
    &[disabled],
    &.disabled {
        .hook-checkbox-disabled();
    }
    .hook-checkbox();
}
.checkbox-small() {
    width: @checkbox-small-size;
    height: @checkbox-small-size;
}
// new
input {
    &.checkbox {
        .checkbox;
    }
    &.checkbox-small {
        .checkbox-small;
    }
}
// compatibility
:not(input) {
    &.checkbox input {
        .checkbox;
    }
    &.checkbox-small input {
        .checkbox-small;
    }
}

// chrome fixes
input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input:-webkit-autofill,
textarea:-webkit-autofill,
textarea:-webkit-autofill:hover,
textarea:-webkit-autofill:focus,
select:-webkit-autofill,
select:-webkit-autofill:hover,
select:-webkit-autofill:focus {
    -webkit-box-shadow: 0 0 0px 1000px var(--color-white) inset;
    transition: background-color 5000s ease-in-out 0s;
    background: -webkit-linear-gradient(top,  rgba(255,255,255,0) 0%,rgba(0,174,255,0.04) 50%,rgba(255,255,255,0) 51%,rgba(0,174,255,0.03) 100%);
}
